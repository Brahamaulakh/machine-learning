#knn clustering
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.neighbors import KNeighborsClassifier
from sklearn.metrics import accuracy_score
# Load the Iris dataset
iris = load_iris()
X = iris.data
y_true = iris.target
# Split the dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y_true, test_size=0.2,
random_state=42)
# Perform KNN classification
k = 2 # Number of neighbors
knn = KNeighborsClassifier(n_neighbors=k)
knn.fit(X_train, y_train)
y_pred = knn.predict(X_test)
# Evaluate accuracy
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
# Visualize the clusters
# For visualization, let's choose two features: sepal length and petal length
feature1_index = 0
feature2_index = 2
# Plot data points
plt.figure(figsize=(10, 6))
plt.scatter(X_test[:, feature1_index], X_test[:, feature2_index], c=y_pred,
cmap='viridis', s=50, alpha=0.5)
# Labeling the plot
plt.xlabel(iris.feature_names[feature1_index])
plt.ylabel(iris.feature_names[feature2_index])
plt.title('Distribution Boundaries with KNN')
plt.show()
